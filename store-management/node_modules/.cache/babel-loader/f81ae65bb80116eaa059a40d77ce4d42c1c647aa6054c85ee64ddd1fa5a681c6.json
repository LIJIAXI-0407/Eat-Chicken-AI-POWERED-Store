{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CC LI\\\\store-management\\\\src\\\\components\\\\NotificationBell.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport bellIcon from '../assets/images/Bell.svg';\nimport './NotificationBell.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationBell = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleNotifications = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: toggleNotifications,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bellIcon,\n        alt: \"Notifications\",\n        className: \"bell-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-empty\",\n          children: \"No new notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBell, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","bellIcon","jsxDEV","_jsxDEV","NotificationBell","_s","isOpen","setIsOpen","toggleNotifications","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CC LI/store-management/src/components/NotificationBell.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport bellIcon from '../assets/images/Bell.svg';\r\nimport './NotificationBell.css';\r\n\r\nconst NotificationBell = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleNotifications = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-container\">\r\n      <div className=\"notification-bell\" onClick={toggleNotifications}>\r\n        <img \r\n          src={bellIcon} \r\n          alt=\"Notifications\" \r\n          className=\"bell-icon\"\r\n        />\r\n      </div>\r\n      \r\n      {isOpen && (\r\n        <div className=\"notification-popup\">\r\n          <div className=\"notification-header\">\r\n            <h3>Notifications</h3>\r\n          </div>\r\n          <div className=\"notification-content\">\r\n            <div className=\"notification-empty\">No new notifications</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationBell; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCP,OAAA;MAAKM,SAAS,EAAC,mBAAmB;MAACE,OAAO,EAAEH,mBAAoB;MAAAE,QAAA,eAC9DP,OAAA;QACES,GAAG,EAAEX,QAAS;QACdY,GAAG,EAAC,eAAe;QACnBJ,SAAS,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELX,MAAM,iBACLH,OAAA;MAAKM,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCP,OAAA;QAAKM,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCP,OAAA;UAAAO,QAAA,EAAI;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACNd,OAAA;QAAKM,SAAS,EAAC,sBAAsB;QAAAC,QAAA,eACnCP,OAAA;UAAKM,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AA+BtB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}