{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CC LI\\\\store-management\\\\src\\\\context\\\\ProductContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n  const [products, setProducts] = useState([{\n    id: '001',\n    name: 'Cocacola',\n    barcode: '1234567891078',\n    price: '$3.99',\n    stock: '50'\n  }]);\n\n  // 生成新的产品ID\n  const generateNewId = () => {\n    if (products.length === 0) return '001';\n    const lastId = parseInt(products[products.length - 1].id);\n    return String(lastId + 1).padStart(3, '0');\n  };\n\n  // 重新排序所有产品ID\n  const reorderIds = productsList => {\n    return productsList.map((product, index) => ({\n      ...product,\n      id: String(index + 1).padStart(3, '0')\n    }));\n  };\n\n  // 更新产品库存\n  const updateProductStock = (productId, quantity) => {\n    setProducts(prevProducts => {\n      const updatedProducts = prevProducts.map(product => {\n        if (product.id === productId) {\n          const newStock = parseInt(product.stock) - quantity;\n          return {\n            ...product,\n            stock: String(Math.max(0, newStock)) // 确保库存不会小于0\n          };\n        }\n        return product;\n      });\n      return reorderIds(updatedProducts);\n    });\n  };\n\n  // 检查库存并显示警告\n  useEffect(() => {\n    products.forEach(product => {\n      const stock = parseInt(product.stock);\n      if (stock < 5) {\n        alert(`警告：${product.name} 的库存低于5件，当前库存：${stock}件`);\n      }\n    });\n  }, [products]);\n  const value = {\n    products,\n    setProducts,\n    generateNewId,\n    reorderIds,\n    updateProductStock\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductProvider, \"g3TV7BWvqAdywvDAlaEIVT84mR4=\");\n_c = ProductProvider;\nexport const useProducts = () => {\n  _s2();\n  const context = useContext(ProductContext);\n  if (!context) {\n    throw new Error('useProducts must be used within a ProductProvider');\n  }\n  return context;\n};\n_s2(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","ProductContext","ProductProvider","children","_s","products","setProducts","id","name","barcode","price","stock","generateNewId","length","lastId","parseInt","String","padStart","reorderIds","productsList","map","product","index","updateProductStock","productId","quantity","prevProducts","updatedProducts","newStock","Math","max","forEach","alert","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProducts","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/CC LI/store-management/src/context/ProductContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst ProductContext = createContext();\r\n\r\nexport const ProductProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([\r\n    {\r\n      id: '001',\r\n      name: 'Cocacola',\r\n      barcode: '1234567891078',\r\n      price: '$3.99',\r\n      stock: '50'\r\n    }\r\n  ]);\r\n\r\n  // 生成新的产品ID\r\n  const generateNewId = () => {\r\n    if (products.length === 0) return '001';\r\n    const lastId = parseInt(products[products.length - 1].id);\r\n    return String(lastId + 1).padStart(3, '0');\r\n  };\r\n\r\n  // 重新排序所有产品ID\r\n  const reorderIds = (productsList) => {\r\n    return productsList.map((product, index) => ({\r\n      ...product,\r\n      id: String(index + 1).padStart(3, '0')\r\n    }));\r\n  };\r\n\r\n  // 更新产品库存\r\n  const updateProductStock = (productId, quantity) => {\r\n    setProducts(prevProducts => {\r\n      const updatedProducts = prevProducts.map(product => {\r\n        if (product.id === productId) {\r\n          const newStock = parseInt(product.stock) - quantity;\r\n          return {\r\n            ...product,\r\n            stock: String(Math.max(0, newStock)) // 确保库存不会小于0\r\n          };\r\n        }\r\n        return product;\r\n      });\r\n      return reorderIds(updatedProducts);\r\n    });\r\n  };\r\n\r\n  // 检查库存并显示警告\r\n  useEffect(() => {\r\n    products.forEach(product => {\r\n      const stock = parseInt(product.stock);\r\n      if (stock < 5) {\r\n        alert(`警告：${product.name} 的库存低于5件，当前库存：${stock}件`);\r\n      }\r\n    });\r\n  }, [products]);\r\n\r\n  const value = {\r\n    products,\r\n    setProducts,\r\n    generateNewId,\r\n    reorderIds,\r\n    updateProductStock\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider value={value}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  if (!context) {\r\n    throw new Error('useProducts must be used within a ProductProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}